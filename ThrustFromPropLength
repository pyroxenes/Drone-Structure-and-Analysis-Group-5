%Use MATLAB to generate a slope of thrust provided by diffrent length of propelors using a non linear dataset
%Data from https://database.tytorobotics.com/motors/3gn/xoar-ta110-20-kv80
%Using a Xoar TA110-20 KV80 motor
propLengths = [0,24,36,40,47];
% Define thrust values corresponding to the propeller lengths (in kgf)
thrustValues = [0,9.51, 10.9, 18.8, 26.5];
% Convert thrust values from kgf to lbf (1 kgf = 2.20462 lbf)
thrustValues = thrustValues * 2.20462;

% Fit a nonlinear model to the data
fitModel = fit(propLengths', thrustValues', 'poly2');
% Generate a range of propeller lengths for prediction, extending beyond the last data point
newLengths = linspace(0, 60, 200); 
predictedThrust = feval(fitModel, newLengths);
% Plot the original data and the fitted curve
figure;
scatter(propLengths, thrustValues, 'filled', 'MarkerFaceColor', 'b');
hold on;
plot(newLengths, predictedThrust, 'r-', 'LineWidth', 2);
xlabel('Propeller Length (inches)');
ylabel('Thrust (lbf)');
title('Thrust vs. Propeller Length');
legend('Data Points', 'Fitted Curve');
grid on;

%Display the coefficients of the slope
coefficients = coeffvalues(fitModel);
disp('Coefficients of the fitted model:');
disp(coefficients);

%Graph the minimum length of each quadcopter arm based on any given prop length using the fitted curve
%Using the equation minArmLengths = sqrt(((4/3)*propLength)^2 / 2)
%On a new graph, have prop length on one axis and minArmLengths on another axis
Lengths= 4/3 * newLengths;
minArmLengths = sqrt((Lengths.^2) / 2) ;

figure;
plot(Lengths, minArmLengths, 'g-', 'LineWidth', 2);
xlabel('Propeller Length (inches)');
ylabel('Minimum Arm Length (inches)');
title('Minimum Arm Length vs. Propeller Length');
grid on;

% Calculate the average slope of the second graph
averageSlope = mean(diff(minArmLengths) ./ diff(newLengths));
disp(['Average slope of the minimum arm length curve: ', num2str(averageSlope)]);
